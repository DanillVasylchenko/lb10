"""
    Реалізувати програмно мовою Python завдання з наведеного нижче списку. Для
кожної з задач алгоритм реалізувати з використанням рекурсії і ітерації. Аргументувати
письмово доцільність вибору в кожному випадку рекурсії або ітерації (використовувати
в якості критеріїв - час розробки та виконання програм, обсяг займаної пам'яті,
читабельність програми).

1. Сформувати функцію для введення з клавіатури послідовності чисел і виведення
її на екран у зворотному порядку (завершаючий символ послідовності – крапка)

Васильченко Даниїл 122 А
"""
from time import time  # для підрахунку часу виконання треба використовувати великі значення


# ІТЕРАЦЯ
def iteration_reverse_sequence(kek):
    return kek[::-1]


# РЕКУРСІЯ
def recursion_reverse_sequence(kek):
    if not kek:
        return []
    else:
        return [kek[-1]] + recursion_reverse_sequence(kek[:-1])


input_massive = []
print("Введіть Enter для завершення введення")
while True:
    x = input("Введіть число: ")
    if x == '':
        break
    input_massive.append(int(x))

tic1 = time()
x = recursion_reverse_sequence(input_massive).append(".")
print("Результат виконання рекурсією: \n", x)
toc1 = time()
recursion_time = toc1 - tic1
tic2 = time()
x = recursion_reverse_sequence(input_massive).append(".")
print("Результат виконання ітерацією: \n", x)
toc2 = time()
iteration_time = toc2 - tic2
print()
print("Час розробки: обидва способи прості у реалізації, але ітерація потребує менше коду\n"
      f"Час виконання: ітерація = {iteration_time}\n"
      f"               рекурсія = {recursion_time}\nІтерація виконується швидше\n"
      "Обсяг пам'яті: рекурсія забирає більше пам'яті через зберігання значень у стеку\n"
      "Ітерація читабельніша")
